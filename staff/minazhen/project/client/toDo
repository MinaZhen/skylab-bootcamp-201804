- css

- clean code
    withRouter, check if isLoggedIn
        Landing (state.loading, deltaY)
        Three 

        Done? Profile, Main, World, Unregister, Register, Logout, Login, Home, Country, Footer, Header 
        
    
- Error msg + modal


- check password security
- extra tests
- presentation


- sinon?

    v.1.0
        World {
            implement second map
            zoom buttons
            }
        Profile {
            avatar
            }
            
    v.1.5
        Home {
            Find Users
            }
        World {
            check if value.properties.otherUsername
            }
        Country {
            check if value.properties.otherUsername
            enable write comments, likes & disable edition if otherUsername
            }
        Profile {
            check if value.properties.otherUsername
            enable write comments & extra info 
            otherUsername only read
            friendship requests
            }

________________CHECK HOME
class Home extends Component {
    state = {
        username: "",
        otherUsername: "",
        otherUserId: "NO-ID",
        countries: [],
        state: ""
    }

    componentWillMount() {
        if (this.state.otherUserId !== "NO-ID") { //TO DO v.1.5
        } else {
            if (logic.loggedIn()) {
                return logic.retrieveUser()
                .then(res => {
                    if (res.status === "KO") {
                        logic.logout()
                        console.error("Something wrong happened... Try to log in again")
                        this.props.history.push(`/login`)
                    }
                    return res
                })
                .catch(err => { console.log(err) })
            } else this.props.history.push(`/`) 
        }
    }

    otherUsername = (e) => {
        const otherUsername = e.target.value
        this.setState({ otherUsername })
    }

    submit = (e) => {
        e.preventDefault()
        this.props.history.push(`/world/${this.state.otherUsername}`)
        // e.preventDefault()
        // logic.findUser(this.otherUsername)
        //     .then((otherUserId) => {
        //         this.setState({ otherUserId })
        //         this.props.history.push(`/world/${otherUsername}`)
        //     })
        //     .catch(error => {
        //         console.error("show -> "+ error.message)
        //         this.props.history.push(`/world`)
        //     })
    }

    render() {
        return (
        <div className="home">
            {/* <form onSubmit={this.submit}>
                <input type="text" onChange={this.otherUsername} value={otherUsername} placeholder="Find a friend" autoComplete="off" />
                <button type="submit">Find a friend</button>
            </form> */}

            <Switch>
                <Route exact path = "/world/:username?" component={World}/>
                <Route exact path = "/:countryName/:username?" component={Country} />
            </Switch>
        </div>)
    }
}



// function Home(props) {


//     return (
//         <div className="home">
//             <h1>YOU ARE IN HOME</h1>
//             <World />
//         </div>

//     )
// }

export default withRouter(Home)